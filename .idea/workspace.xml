<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="59ff47a6-ece6-4e2e-b777-6247aa1f282e" name="Changes" comment="Create the JobTest.java code testSettingJobId() making sure each job has a unique Id. testJobConstructorSetsAllFields() making sure to use assertEquals() and assertTrue() to make sure the constructor assigns both the class and value to each field. testJobsforEquality check if equals returns false. since in our case it should only return false since all our jobs have a unique Id it should never return true.">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/org/launchcode/techjobs/oo/Job.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/launchcode/techjobs/oo/Job.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/test/java/org/launchcode/techjobs/oo/JobTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/test/java/org/launchcode/techjobs/oo/JobTest.java" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ExternalProjectsData">
    <projectState path="$PROJECT_DIR$">
      <ProjectState />
    </projectState>
  </component>
  <component name="ExternalProjectsManager">
    <system id="GRADLE">
      <state>
        <task path="$PROJECT_DIR$">
          <activation />
        </task>
        <projects_view />
      </state>
    </system>
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;Mll0032&quot;
  }
}</component>
  <component name="GithubPullRequestsUISettings">{
  &quot;selectedUrlAndAccountId&quot;: {
    &quot;url&quot;: &quot;https://github.com/Mll0032/techjobs-oo-java-graded-17.git&quot;,
    &quot;accountId&quot;: &quot;87f47283-f4f2-42dc-b6f2-c3f4e0349c3e&quot;
  }
}</component>
  <component name="ProblemsViewState">
    <option name="selectedTabId" value="CurrentFile" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 8
}</component>
  <component name="ProjectId" id="2Qn6e2NCqVj233XTVZ3RW2TzDBN" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "Gradle.Build Java-Assignments-2.executor": "Run",
    "Gradle.JobTest.executor": "Run",
    "Gradle.JobTest.testJobConstructorSetsAllFields.executor": "Run",
    "Gradle.JobTest.testJobsForEquality.executor": "Run",
    "Gradle.JobTest.testToStringContainsCorrectLabelsAndData.executor": "Run",
    "Gradle.JobTest.testToStringStartsAndEndsWithNewLine.executor": "Run",
    "Gradle.TestTaskTwo.executor": "Debug",
    "JUnit.JobTest.executor": "Run",
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
    "git-widget-placeholder": "main",
    "kotlin-language-version-configured": "true",
    "last_opened_file_path": "C:/Users/mllaw/Desktop/LaunchCode/Java-assignments/interfaces/studio/spinning-discs-studio"
  }
}]]></component>
  <component name="RunManager" selected="Gradle.JobTest.testToStringHandlesEmptyField">
    <configuration name="JobTest.testJobConstructorSetsAllFields" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
      <ExternalSystemSettings>
        <option name="executionName" />
        <option name="externalProjectPath" value="$PROJECT_DIR$" />
        <option name="externalSystemIdString" value="GRADLE" />
        <option name="scriptParameters" value="" />
        <option name="taskDescriptions">
          <list />
        </option>
        <option name="taskNames">
          <list>
            <option value=":test" />
            <option value="--tests" />
            <option value="&quot;org.launchcode.techjobs.oo.JobTest.testJobConstructorSetsAllFields&quot;" />
          </list>
        </option>
        <option name="vmOptions" />
      </ExternalSystemSettings>
      <ExternalSystemDebugServerProcess>false</ExternalSystemDebugServerProcess>
      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
      <DebugAllEnabled>false</DebugAllEnabled>
      <RunAsTest>true</RunAsTest>
      <method v="2" />
    </configuration>
    <configuration name="JobTest.testJobsForEquality" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
      <ExternalSystemSettings>
        <option name="executionName" />
        <option name="externalProjectPath" value="$PROJECT_DIR$" />
        <option name="externalSystemIdString" value="GRADLE" />
        <option name="scriptParameters" value="" />
        <option name="taskDescriptions">
          <list />
        </option>
        <option name="taskNames">
          <list>
            <option value=":test" />
            <option value="--tests" />
            <option value="&quot;org.launchcode.techjobs.oo.JobTest.testJobsForEquality&quot;" />
          </list>
        </option>
        <option name="vmOptions" />
      </ExternalSystemSettings>
      <ExternalSystemDebugServerProcess>false</ExternalSystemDebugServerProcess>
      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
      <DebugAllEnabled>false</DebugAllEnabled>
      <RunAsTest>true</RunAsTest>
      <method v="2" />
    </configuration>
    <configuration name="JobTest.testToStringContainsCorrectLabelsAndData" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
      <ExternalSystemSettings>
        <option name="executionName" />
        <option name="externalProjectPath" value="$PROJECT_DIR$" />
        <option name="externalSystemIdString" value="GRADLE" />
        <option name="scriptParameters" value="" />
        <option name="taskDescriptions">
          <list />
        </option>
        <option name="taskNames">
          <list>
            <option value=":test" />
            <option value="--tests" />
            <option value="&quot;org.launchcode.techjobs.oo.JobTest.testToStringContainsCorrectLabelsAndData&quot;" />
          </list>
        </option>
        <option name="vmOptions" />
      </ExternalSystemSettings>
      <ExternalSystemDebugServerProcess>false</ExternalSystemDebugServerProcess>
      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
      <DebugAllEnabled>false</DebugAllEnabled>
      <RunAsTest>true</RunAsTest>
      <method v="2" />
    </configuration>
    <configuration name="JobTest.testToStringHandlesEmptyField" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
      <ExternalSystemSettings>
        <option name="executionName" />
        <option name="externalProjectPath" value="$PROJECT_DIR$" />
        <option name="externalSystemIdString" value="GRADLE" />
        <option name="scriptParameters" value="" />
        <option name="taskDescriptions">
          <list />
        </option>
        <option name="taskNames">
          <list>
            <option value=":test" />
            <option value="--tests" />
            <option value="&quot;org.launchcode.techjobs.oo.JobTest.testToStringHandlesEmptyField&quot;" />
          </list>
        </option>
        <option name="vmOptions" />
      </ExternalSystemSettings>
      <ExternalSystemDebugServerProcess>false</ExternalSystemDebugServerProcess>
      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
      <DebugAllEnabled>false</DebugAllEnabled>
      <RunAsTest>true</RunAsTest>
      <method v="2" />
    </configuration>
    <configuration name="JobTest.testToStringStartsAndEndsWithNewLine" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
      <ExternalSystemSettings>
        <option name="executionName" />
        <option name="externalProjectPath" value="$PROJECT_DIR$" />
        <option name="externalSystemIdString" value="GRADLE" />
        <option name="scriptParameters" value="" />
        <option name="taskDescriptions">
          <list />
        </option>
        <option name="taskNames">
          <list>
            <option value=":test" />
            <option value="--tests" />
            <option value="&quot;org.launchcode.techjobs.oo.JobTest.testToStringStartsAndEndsWithNewLine&quot;" />
          </list>
        </option>
        <option name="vmOptions" />
      </ExternalSystemSettings>
      <ExternalSystemDebugServerProcess>false</ExternalSystemDebugServerProcess>
      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
      <DebugAllEnabled>false</DebugAllEnabled>
      <RunAsTest>true</RunAsTest>
      <method v="2" />
    </configuration>
    <configuration name="JobTest" type="JUnit" factoryName="JUnit">
      <module name="techjobs-oo-java17-graded.test" />
      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="true" />
      <option name="ALTERNATIVE_JRE_PATH" value="17" />
      <option name="PACKAGE_NAME" value="org.launchcode.techjobs.oo" />
      <option name="MAIN_CLASS_NAME" value="org.launchcode.techjobs.oo.JobTest" />
      <option name="METHOD_NAME" value="" />
      <option name="TEST_OBJECT" value="class" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <list>
      <item itemvalue="Gradle.JobTest.testJobConstructorSetsAllFields" />
      <item itemvalue="Gradle.JobTest.testJobsForEquality" />
      <item itemvalue="Gradle.JobTest.testToStringContainsCorrectLabelsAndData" />
      <item itemvalue="Gradle.JobTest.testToStringHandlesEmptyField" />
      <item itemvalue="Gradle.JobTest.testToStringStartsAndEndsWithNewLine" />
      <item itemvalue="JUnit.JobTest" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Gradle.JobTest.testToStringHandlesEmptyField" />
        <item itemvalue="Gradle.JobTest.testToStringContainsCorrectLabelsAndData" />
        <item itemvalue="Gradle.JobTest.testToStringStartsAndEndsWithNewLine" />
        <item itemvalue="Gradle.JobTest.testJobsForEquality" />
        <item itemvalue="Gradle.JobTest.testJobConstructorSetsAllFields" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="59ff47a6-ece6-4e2e-b777-6247aa1f282e" name="Changes" comment="" />
      <created>1685977091317</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1685977091317</updated>
    </task>
    <task id="LOCAL-00001" summary="Finish the TODO in CoreCompetency.java by using the generator to generate getters and setters for the id and value fields.">
      <option name="closed" value="true" />
      <created>1728596017205</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1728596017205</updated>
    </task>
    <task id="LOCAL-00002" summary="Completing a TODO from Location.java Adding constructor that takes a string as a parameter and assigns it to value.">
      <option name="closed" value="true" />
      <created>1728598617605</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1728598617605</updated>
    </task>
    <task id="LOCAL-00003" summary="Completing a TODO from PositionType.java Adding custom toString(), equals, and hashCode methods. This completes Task 2: Create Support Classes.">
      <option name="closed" value="true" />
      <created>1728599331392</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1728599331392</updated>
    </task>
    <task id="LOCAL-00004" summary="Completing a TODO from Job.java Adding two constructors for Job for a unique id and the five fields. Override the equals and hashCode considering the two Job objects are equal when their fields match. Then generate getters and setters for each field except nextId and only the getter for id. This completes Task 3: Complete the Job Class.">
      <option name="closed" value="true" />
      <created>1728600811880</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1728600811880</updated>
    </task>
    <task id="LOCAL-00005" summary="Create the JobTest.java code testSettingJobId() making sure each job has a unique Id. testJobConstructorSetsAllFields() making sure to use assertEquals() and assertTrue() to make sure the constructor assigns both the class and value to each field. testJobsforEquality check if equals returns false. since in our case it should only return false since all our jobs have a unique Id it should never return true.">
      <option name="closed" value="true" />
      <created>1728604644708</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL-00005" />
      <option name="project" value="LOCAL" />
      <updated>1728604644708</updated>
    </task>
    <option name="localTasksCounter" value="6" />
    <servers />
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="Finish the TODO in CoreCompetency.java by using the generator to generate getters and setters for the id and value fields." />
    <MESSAGE value="Completing a TODO from Location.java Adding constructor that takes a string as a parameter and assigns it to value." />
    <MESSAGE value="Completing a TODO from PositionType.java Adding custom toString(), equals, and hashCode methods. This completes Task 2: Create Support Classes." />
    <MESSAGE value="Completing a TODO from Job.java Adding two constructors for Job for a unique id and the five fields. Override the equals and hashCode considering the two Job objects are equal when their fields match. Then generate getters and setters for each field except nextId and only the getter for id. This completes Task 3: Complete the Job Class." />
    <MESSAGE value="Create the JobTest.java code testSettingJobId() making sure each job has a unique Id. testJobConstructorSetsAllFields() making sure to use assertEquals() and assertTrue() to make sure the constructor assigns both the class and value to each field. testJobsforEquality check if equals returns false. since in our case it should only return false since all our jobs have a unique Id it should never return true." />
    <option name="LAST_COMMIT_MESSAGE" value="Create the JobTest.java code testSettingJobId() making sure each job has a unique Id. testJobConstructorSetsAllFields() making sure to use assertEquals() and assertTrue() to make sure the constructor assigns both the class and value to each field. testJobsforEquality check if equals returns false. since in our case it should only return false since all our jobs have a unique Id it should never return true." />
  </component>
</project>